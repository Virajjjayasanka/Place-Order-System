/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.Thogakade.views;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.Thogakade.common.IDGenerator;
import lk.ijse.Thogakade.controller.ControllerFactory;
import lk.ijse.Thogakade.controller.custom.ItemController;
import lk.ijse.Thogakade.controller.custom.OrderController;
import lk.ijse.Thogakade.controller.custom.OrderDetailController;
import lk.ijse.Thogakade.dto.ItemDTO;
import lk.ijse.Thogakade.dto.OrderDTO;
import lk.ijse.Thogakade.dto.OrderDetailDTO;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 * private OrderController orderController private DefaultTableModel dtmItems;
 *
 * @author Viraj jayasanka
 */
public class placeOderFrom extends javax.swing.JPanel {

   
    private ItemController itemController;
    private DefaultTableModel dtmItems;
    private OrderController ctrlOrder;

    /**
     * Creates new form placeOderFrom
     */
    public placeOderFrom() {
        initComponents();
         
        ctrlOrder = (OrderController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ORDER);
        itemController = (ItemController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ITEM);
        dtmItems = (DefaultTableModel) tblItems.getModel();
        OrderID();
    //doValidate();
        //setCustomerId();

        // setDate();
        //  setTime();
    }
     private void clearFields() {
     //   txtCustomerId.setText("");
        txtCustomerId.setText("");
        customerNameText.setText("");
        txtItemCode.setText("");
        txtDescription.setText("");
        txtQty.setText("");
        txtTotal.setText("");
        txtUnitPrice.setText("");
        txtAvailableQty.setText("");
      //  JLTotal.setText("");
        
       // txtDate.setText("");
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnAdd = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        customerNameText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        txtCustomerId = new javax.swing.JTextField();
        txtItemCode = new javax.swing.JTextField();
        txtOrderId = new javax.swing.JTextField();
        txtAvailableQty = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Item Disc       :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, -1, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Unit Price :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Order Id    :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Customer Id");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Item  Code :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, 30));

        jLabel9.setFont(new java.awt.Font("Sinhala-Lasitha-1", 3, 36)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Thogakade/icons/Pay-Now-gatewayaaaaaaaaaaa.png"))); // NOI18N
        jLabel9.setText("PLACE ORDER FORM");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 590, 60));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Total");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 510, -1, 20));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Save Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, 150, 30));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Thogakade/icons/update Customer.png"))); // NOI18N
        jButton2.setText("Remove All");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 600, 200, 30));

        DeleteBtn.setBackground(new java.awt.Color(255, 51, 51));
        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/Thogakade/icons/delete customer ican1.png"))); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        add(DeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 240, 170, 40));

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotal.setText("00.00");
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 500, 260, 30));

        txtUnitPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitPriceActionPerformed(evt);
            }
        });
        add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 140, 30));

        txtDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });
        add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 230, 30));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 1070, 20));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 1080, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Available Qty. :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, -1, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 1080, 20));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Add Order");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 170, 170, 40));

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Select Item ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 140, 30));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("Select Customer ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 140, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Qty : ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, -1, -1));

        txtQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 170, 30));

        customerNameText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(customerNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 230, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Customer Name");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, -1, 20));

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Description", "Unit Price", "Qty", "Total"
            }
        ));
        jScrollPane2.setViewportView(tblItems);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 1080, 160));
        add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 160, 30));
        add(txtItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 150, 30));

        txtOrderId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 100, 170, 30));
        add(txtAvailableQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, 160, 30));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Print Invoice");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 600, 190, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void txtUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitPriceActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblItems.getModel();

        int index = tblItems.getSelectedRow();

        double amount = (double) dtm.getValueAt(index, 4);
        dtm.removeRow(index);
        totalAmount -= amount;
        txtTotal.setText("" + totalAmount);
        JOptionPane.showConfirmDialog(this, "Delete ");
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        SelectItem frmSelectItem = new SelectItem();
        frmSelectItem.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        SelectCustomer frmSelectCustomer = new SelectCustomer();
        frmSelectCustomer.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed

        //String orderId = txtOrderId.getText();
        String itemCode = txtItemCode.getText();
        String description = txtDescription.getText();
        double unitPrice = Double.parseDouble(txtUnitPrice.getText());
        int orderQty = Integer.parseInt(txtAvailableQty.getText());
        double qtyOnHand = Double.parseDouble(txtQty.getText());
        DefaultTableModel dtm = (DefaultTableModel) tblItems.getModel();
        if (orderQty <= qtyOnHand) {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String code = (String) dtm.getValueAt(i, 0);
                if (itemCode.equals(code)) {
                    int qty = (int) dtm.getValueAt(i, 2);
                    orderQty += qty;
                    dtm.removeRow(i);
                    totalAmount -= qty * unitPrice;
                }
            }
            double amount = unitPrice * orderQty;
            totalAmount += amount;
            txtTotal.setText("" + totalAmount);
            Object[] rowData = {itemCode, description, unitPrice, orderQty, amount};

            dtm.addRow(rowData);
            qtyOnHand -= orderQty;
            txtQty.setText("" + qtyOnHand);
        } else {
            JOptionPane.showMessageDialog(this, "low stocks");
        }

    }//GEN-LAST:event_txtQtyActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
 
        String itemCode = (String) txtItemCode.getText();
        DefaultTableModel dtm = (DefaultTableModel) tblItems.getModel();
       // String CutomerId = (String)txtCustomerId.getText();
       // String OrderId  = (String)txtOrderId.getText();
        int orderQty = Integer.parseInt(txtQty.getText());
        int qtyOnHand = Integer.parseInt(txtQty.getText());
        double unitPrice = Double.parseDouble(txtUnitPrice.getText());
       
        if (orderQty <= qtyOnHand) {
            try {
                String description = txtDescription.getText();

                for (int i = 0; i < dtm.getRowCount(); i++) {
                    String code = (String) dtm.getValueAt(i, 0);
                    if (itemCode.equals(code)) {
                        int qty = (int) dtm.getValueAt(i, 2);
                        orderQty += qty;
                        dtm.removeRow(i);
                        totalAmount -= qty * unitPrice;
                    }
                }
                double amount = unitPrice * orderQty;
               // OrderID();
                totalAmount += amount;
                txtTotal.setText("" + totalAmount);

                Object[] rowData = {itemCode, description, unitPrice, orderQty, amount};
                dtm.addRow(rowData);

                ItemDTO dTO = itemController.searchItem(itemCode);
                int qty = dTO.getQtyOnHand();
                int newQty = qty - 1;
                dTO.setQtyOnHand(newQty);
               boolean isUpdated = itemController.update(dTO);
                if (isUpdated) {
                    System.out.println("sfg");
                }
                qtyOnHand -= orderQty;
                txtQty.setText("" + qtyOnHand);
                txtQty.setText("");
            } catch (Exception ex) {
                Logger.getLogger(placeOderFrom.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(placeOderFrom.this, "low stocks");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        Random orderNumber = new Random();
         //OrderID();
         Date date = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String curDate = sdf.format(date);
        String oid= txtOrderId.getText();
        String cid=txtCustomerId.getText();
        OrderDTO orderDTO = new OrderDTO(oid,curDate,cid);
        ArrayList<OrderDetailDTO> alOrderDetails = new ArrayList<>();
        
        for(int i=0;i<dtmItems.getRowCount();i++){
            OrderDetailDTO orderDetail = new OrderDetailDTO(
                    orderDTO.getId(), 
                    dtmItems.getValueAt(i, 0).toString(),
                    dtmItems.getValueAt(i, 1).toString(),
                    new BigDecimal(dtmItems.getValueAt(i, 2).toString()),
                    Integer.parseInt(dtmItems.getValueAt(i, 3).toString()));
                     
            alOrderDetails.add(orderDetail);
        }
        //OrderID() ;
        clearFields();
        try {
            boolean result = ctrlOrder.add(orderDTO, alOrderDetails);
            if (result){
                JOptionPane.showMessageDialog(this, "Order has been successfully placed","Success",JOptionPane.INFORMATION_MESSAGE);
                 ManageMain.jButton8.doClick();
            }else{
                JOptionPane.showMessageDialog(this, "Failed to place the order", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to place the order", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(placeOderFrom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         try {
            JasperReport comJasperReport = (JasperReport)JRLoader.loadObject(AddCustomerFrom.class.getResource("/lk/ijsejasper/report/CustomerReprt_A4.jasper"));

            JasperPrint filledReport = JasperFillManager.fillReport(comJasperReport, new HashMap<>(),new JRTableModelDataSource(tblItems.getModel()));
            mYjasperViewer MyjViewer = new mYjasperViewer(filledReport);
            MyjViewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(AddCustomerFrom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton btnAdd;
    public static javax.swing.JTextField customerNameText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tblItems;
    public static javax.swing.JTextField txtAvailableQty;
    public static javax.swing.JTextField txtCustomerId;
    public static javax.swing.JTextField txtDescription;
    public static javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtOrderId;
    public static javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtTotal;
    public static javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
    private double totalAmount;

    public void setCustomerId(String customerId) {
        txtCustomerId.setText(customerId);
    }

    public void setItemId(String itemId, String itemDescription, String itemUnitPrice, String itemAvailableQty) {
        txtItemCode.setText(itemId);
        txtDescription.setText(itemDescription);
        txtUnitPrice.setText(itemUnitPrice);
        txtAvailableQty.setText(itemAvailableQty);

    }

    private void setEnable(boolean enable, JComponent... cmp) {
        txtDescription.setEnabled(enable);
        txtItemCode.setEnabled(enable);
        txtUnitPrice.setEnabled(enable);
        txtCustomerId.setEditable(enable);
        txtAvailableQty.setEditable(enable);
        txtQty.setEditable(enable);

        btnAdd.setEnabled(enable);
        DeleteBtn.setEnabled(enable);
        for (JComponent jcmp : cmp) {
            jcmp.setEnabled(!enable);
        }
    }

    private void doValidate() {
        String itemId = txtItemCode.getText();

        String description = txtDescription.getText();
        String unitPrice = txtUnitPrice.getText();
        String qty = txtQty.getText();
        String availableQty = txtAvailableQty.getText();
        String customerId = txtCustomerId.getText();
        String orderId = txtOrderId.getText();
        //  Date date = dateTxt.getDate();

        btnAdd.setEnabled(false);
          DeleteBtn.setEnabled(false);

        if (!itemId.isEmpty()) {
            if (!description.isEmpty()) {
                if (!unitPrice.isEmpty()/*!unitPrice.isEmpty()*/) {
                    //if (!availableQty.isEmpty()) {
                        if (!customerId.isEmpty()) {
                            if (!orderId.isEmpty()) {
                               btnAdd.setEnabled(true);
                                 DeleteBtn.setEnabled(true);
                            }
                            

                       // }
                    }
                }
            }
        }
    }

         
        
    


private void OrderID() {
        try {
            String orderId;
            orderId = IDGenerator.getNewID("Orders", "oderid", "O");
           txtOrderId.setText(orderId);
        } catch (SQLException ex) {
            Logger.getLogger(AddCustomerFrom.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCustomerFrom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

